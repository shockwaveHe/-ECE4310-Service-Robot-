<?xml version="1.0"?>
<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find spark1_description)/urdf/spark1_description_rtabmap.urdf"/>
    <arg name="point2laser" default="/camera/depth_registered/points"/>
    <arg name="world_name" value="$(find spark1_description)/worlds/world_museum.world"/>
   
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

        <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>

        <!-- 运行robot_state_publisher节点，发布tf  -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
            <param name="publish_frequency" type="double" value="50.0" />
        </node>

    	<!-- 在gazebo中加载机器人模型-->
    	<param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          	args="-unpause -urdf -model marobot1 -param robot_description -x 0.0 -y 0.0"/>
	
	<include file="$(find spark1_description)/launch/pointcloud2scan.launch">
		<arg name="point2laser"	value="$(arg point2laser)"/>
	</include>


  	<!-- Move base -->
  	<include file="$(find spark_navigation)/launch/includes/move_base.launch.xml"/>


	<!-- rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find spark_rtabmap)/rviz/spark_rtab_map_astrapro.rviz"/>
	
	<!-- rtabmap -->
  	<include file="$(find spark_rtabmap)/launch/spark_mapping_astrapro.launch">
		<arg name="localization"                  value="true"/>
	</include>


  	
	<!--创建新的终端，spark键盘控制 “wsad”分别代表“前后左右”-->
  	<node pkg="spark_teleop" type="keyboard_control.sh" name="kc_2d" />
  	
	<!--创建新的终端，确定是否保存地图-->
  	<node pkg="spark_teleop" type="cmd_save_map.sh" name="csm_2d" />



</launch>
